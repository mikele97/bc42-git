- Cấu hình git cho user (chỉ cần làm 1 lần duy nhất)
    + git config --global user.name "Your name"
    + git config --global user.email "Your email"


- git init: khởi taho git cho một project ( chỉ cần 1 lần duy nhất)

- git add:  sắp xếp cái file đã bị thay đổi, thêm mới hoặc xóa so với lần commit trước đó, để chuẩn bị cho lần commit tiếp theo
  + git add filename1 filename2: thêm 1 hoặc nhiều filename
  + git add . : thêm toàn bộ file bị thay đổi

- git commit -m "text": xác nhận và lưu trữ các file đã thay đổi

-git log: xem lại lịch sử commit

-git status: xem trạng thái hiện tại của thư mục làm việc , nó sẽ hiển thị những file thay đổi so với những lần commit trước đó. Đồng thời hiển thị trạng thái của các file trước đó như là đã được xác nhận để commit hay chưa

-git push: đẩy tất cả commit của 1 brand twf local responsitory lên trên remote reponsitory

- git clone: tải remote reponsitory về máy tính

- git checkout: chuyển sang 1 branch khác
    + git checkout branch-name: chuyển brand
    + git check out -b branch-naem: tạo branch

- git pull: kéo những commit mới nhất của 1 brand từ remote  responsitory về local responsiroty

- git merge: hợp nhất những commit ở 1 brand khác
    Vd: branch hiện tại đang là feature-a, ta chạy lệnh git merge master 
    => hợp nhất những commit của branch master vào branch feature-a  

*lưu ý: quy trình xử lý khi bị conflict (feature-a tạo pull request vào master)
B1: local - checkout về branch master
B2: chạy lệnh git pull để cập nhật những commit mới nhất ở local
B3: checkout về feature-a 
B4: chạy git merge master, để hơp nhất những commit của master vào feature-a 
B5: resolve conflict ( thực hiện ở VsCode)
B6: git add, git commit, git push 
B7: quay lại github để tạo pull request